{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dosl1\\\\Desktop\\\\LingoConnect_frontend\\\\src\\\\pages\\\\practice.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../styles/practice.css';\nimport { getFeedback } from '../api/chat_api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Practice() {\n  _s();\n  const {\n    topic,\n    question\n  } = useParams();\n  const [answerInput, setAnswerInput] = useState('');\n  const [feedback, setFeedback] = useState('');\n  const decodedTopic = decodeURIComponent(topic);\n  const decodedQuestion = decodeURIComponent(question);\n  const handleFeedback = async () => {\n    if (answerInput.trim() !== '') {\n      const gptTitle = \"주제: \" + decodeURIComponent(topic) + \"\\n\";\n      const gptQuestion = \"친구: \" + decodeURIComponent(question) + \"\\n\";\n      const gptUserAnswer = \"사용자: \" + answerInput;\n      console.log(gptTitle, gptQuestion, gptUserAnswer);\n      const response = await getFeedback({\n        gptTitle,\n        gptQuestion,\n        gptUserAnswer\n      });\n      if (response.status === 200) {\n        console.log(response.data);\n        setFeedback(response.data);\n      } else {\n        alert(\"error\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"practice-navbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: process.env.PUBLIC_URL + '/img/arrow.png'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: decodedQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Practice, \"tnqtSSKWC0yi4oAlwt7perhfMMc=\", false, function () {\n  return [useParams];\n});\n_c = Practice;\n{/* <div className=\"practice-container\">\r\n    <div>{decodedTopic}</div>\r\n    <div className=\"question\">{decodedQuestion}</div>\r\n    <div className=\"answer\">{answerInput}</div>\r\n    <div className=\"feedback\">feedback</div>\r\n    <input onChange={(event) => setAnswerInput(event.target.value)}></input>\r\n    <button onClick={handleFeedback}>전송</button>\r\n </div> */}\nvar _c;\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useState","useParams","getFeedback","jsxDEV","_jsxDEV","Practice","_s","topic","question","answerInput","setAnswerInput","feedback","setFeedback","decodedTopic","decodeURIComponent","decodedQuestion","handleFeedback","trim","gptTitle","gptQuestion","gptUserAnswer","console","log","response","status","data","alert","className","children","src","process","env","PUBLIC_URL","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dosl1/Desktop/LingoConnect_frontend/src/pages/practice.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../styles/practice.css';\r\nimport { getFeedback } from '../api/chat_api';\r\n\r\nexport default function Practice() {\r\n    const { topic, question } = useParams();\r\n    const [answerInput, setAnswerInput] = useState('');\r\n    const [feedback, setFeedback] = useState('');\r\n    const decodedTopic = decodeURIComponent(topic);\r\n    const decodedQuestion = decodeURIComponent(question);\r\n\r\n    const handleFeedback = async () => {\r\n        if (answerInput.trim() !== '') {\r\n            const gptTitle = \"주제: \" + decodeURIComponent(topic) + \"\\n\";\r\n            const gptQuestion = \"친구: \" + decodeURIComponent(question) + \"\\n\";\r\n            const gptUserAnswer = \"사용자: \" + answerInput;\r\n            console.log(gptTitle, gptQuestion, gptUserAnswer);\r\n            const response = await getFeedback({ gptTitle, gptQuestion, gptUserAnswer });\r\n            if (response.status === 200) {\r\n                console.log(response.data);\r\n                setFeedback(response.data);\r\n            } else {\r\n                alert(\"error\");\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"practice-container\">\r\n            <div className=\"practice-navbar\">\r\n                <img src={process.env.PUBLIC_URL + '/img/arrow.png'} />\r\n                <h4>{decodedQuestion}</h4>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n{/* <div className=\"practice-container\">\r\n    <div>{decodedTopic}</div>\r\n    <div className=\"question\">{decodedQuestion}</div>\r\n    <div className=\"answer\">{answerInput}</div>\r\n    <div className=\"feedback\">feedback</div>\r\n    <input onChange={(event) => setAnswerInput(event.target.value)}></input>\r\n    <button onClick={handleFeedback}>전송</button>\r\n</div> */}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,wBAAwB;AAC/B,SAASC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGP,SAAS,CAAC,CAAC;EACvC,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,YAAY,GAAGC,kBAAkB,CAACP,KAAK,CAAC;EAC9C,MAAMQ,eAAe,GAAGD,kBAAkB,CAACN,QAAQ,CAAC;EAEpD,MAAMQ,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIP,WAAW,CAACQ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3B,MAAMC,QAAQ,GAAG,MAAM,GAAGJ,kBAAkB,CAACP,KAAK,CAAC,GAAG,IAAI;MAC1D,MAAMY,WAAW,GAAG,MAAM,GAAGL,kBAAkB,CAACN,QAAQ,CAAC,GAAG,IAAI;MAChE,MAAMY,aAAa,GAAG,OAAO,GAAGX,WAAW;MAC3CY,OAAO,CAACC,GAAG,CAACJ,QAAQ,EAAEC,WAAW,EAAEC,aAAa,CAAC;MACjD,MAAMG,QAAQ,GAAG,MAAMrB,WAAW,CAAC;QAAEgB,QAAQ;QAAEC,WAAW;QAAEC;MAAc,CAAC,CAAC;MAC5E,IAAIG,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;QACzBH,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACE,IAAI,CAAC;QAC1Bb,WAAW,CAACW,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,MAAM;QACHC,KAAK,CAAC,OAAO,CAAC;MAClB;IACJ;EACJ,CAAC;EAED,oBACItB,OAAA;IAAKuB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,eAC/BxB,OAAA;MAAKuB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BxB,OAAA;QAAKyB,GAAG,EAAEC,OAAO,CAACC,GAAG,CAACC,UAAU,GAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvDhC,OAAA;QAAAwB,QAAA,EAAKb;MAAe;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAAC9B,EAAA,CAhCuBD,QAAQ;EAAA,QACAJ,SAAS;AAAA;AAAAoC,EAAA,GADjBhC,QAAQ;AAkChC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,UAPC;AAOS,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
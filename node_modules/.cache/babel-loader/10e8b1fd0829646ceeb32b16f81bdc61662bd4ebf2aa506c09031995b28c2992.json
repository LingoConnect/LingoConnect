{"ast":null,"code":"var _jsxFileName = \"/Users/leeyena/web-project/LingoConnect_frontend/src/pages/question.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport learningContent from '../data/learningContent';\nimport '../styles/question.css';\nimport { SmallTitle } from '../components/title';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Question() {\n  _s();\n  const {\n    topic\n  } = useParams();\n  const topicData = learningContent.find(t => t.topic === decodeURIComponent(topic));\n  const handleQuestionClick = topic => {\n    navigate(`/practice/${encodeURIComponent(topic)}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-navbar\",\n      children: /*#__PURE__*/_jsxDEV(SmallTitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), topicData.questions.map(function (question, index) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Question, \"q/9lcJVvHv4NE3gD1PX4MKn8SiI=\", false, function () {\n  return [useParams];\n});\n_c = Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useParams","learningContent","SmallTitle","jsxDEV","_jsxDEV","Question","_s","topic","topicData","find","t","decodeURIComponent","handleQuestionClick","navigate","encodeURIComponent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","questions","map","question","index","_c","$RefreshReg$"],"sources":["/Users/leeyena/web-project/LingoConnect_frontend/src/pages/question.jsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport learningContent from '../data/learningContent';\nimport '../styles/question.css';\nimport { SmallTitle } from '../components/title';\n\nexport default function Question() {\n    const { topic } = useParams();\n    const topicData = learningContent.find(t => t.topic === decodeURIComponent(topic));\n\n    const handleQuestionClick = (topic) => {\n        navigate(`/practice/${encodeURIComponent(topic)}`);\n    }\n\n    return (\n        <div className=\"question-container\">\n            <div className=\"question-navbar\">\n                <SmallTitle />\n            </div>\n            {\n                topicData.questions.map(function (question, index) {\n                    return (\n                        <div>{question}</div>\n                    )\n                })\n            }\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAO,wBAAwB;AAC/B,SAASC,UAAU,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAM;IAAEC;EAAM,CAAC,GAAGP,SAAS,CAAC,CAAC;EAC7B,MAAMQ,SAAS,GAAGP,eAAe,CAACQ,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACH,KAAK,KAAKI,kBAAkB,CAACJ,KAAK,CAAC,CAAC;EAElF,MAAMK,mBAAmB,GAAIL,KAAK,IAAK;IACnCM,QAAQ,CAAC,aAAaC,kBAAkB,CAACP,KAAK,CAAC,EAAE,CAAC;EACtD,CAAC;EAED,oBACIH,OAAA;IAAKW,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BZ,OAAA;MAAKW,SAAS,EAAC,iBAAiB;MAAAC,QAAA,eAC5BZ,OAAA,CAACF,UAAU;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC,EAEFZ,SAAS,CAACa,SAAS,CAACC,GAAG,CAAC,UAAUC,QAAQ,EAAEC,KAAK,EAAE;MAC/C,oBACIpB,OAAA;QAAAY,QAAA,EAAMO;MAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAE7B,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACd,EAAA,CAtBuBD,QAAQ;EAAA,QACVL,SAAS;AAAA;AAAAyB,EAAA,GADPpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}